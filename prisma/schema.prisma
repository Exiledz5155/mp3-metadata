// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

//Error: P1001: Can't reach database server at `mp3mysql.database.windows.net`:`1433` = add yourself to azure firewall

//commands for changing schema
//npx prisma generate     run this after making changes to the schema. this basically complies it
//npx prisma migrate dev --name your_migration_name      this applies the changes in development. kind of like git commit
//npx prisma migrate deploy     this deploys the changes

//there is currently 2 schemas, apply changes to both. see other schema file for more info

//use "npx prisma studio" to open db in browser

generator client {
  provider   = "prisma-client-js"
  binaryTargets = ["native", "windows"]
}

datasource db {
  provider          = "sqlserver"
  url               = env("DATABASE_URL")
  // shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Session {
  id       String    @id
  albums   Album[]  
  mp3Files mp3File[] 
  createdAt DateTime  @default(now())
}

model Album {
  id        Int       @id @default(autoincrement())
  title     String
  artist    String?
  sessionId String    @map("session_id")
  session   Session   @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  mp3Files  mp3File[] 

  @@unique([title, sessionId]) // ensures unique albums
} 

model mp3File {
  id          Int     @id @default(autoincrement())
  filePath    String  @unique
  title       String?
  artist      String?
  duration    String?
  genre       String?
  year        Int?
  albumTitle  String?
  albumArtist String?
  trackNumber Int?
  image       String?
  albumId     Int?
  sessionId   String  @map("session_id")
  album       Album?  @relation(fields: [albumId], references: [id], onDelete: Cascade)
  session     Session @relation(fields: [sessionId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}


